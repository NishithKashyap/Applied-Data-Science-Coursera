np.ones((3,2)) -> 3*2 array with all elements as 1
np.zeroes((3,3)) ->  3*3 array with all elements as 0
np.eye((3,3)) ->  3*3 array with diagnol elements as 1 and others as 0
np.array([1,2,3]*3) -> 1,2,3,1,2,3,1,2,3
np.repeat([1,2,3],3) -> 1,1,1,2,2,2,3,3,3
p = np.ones([2,3], int) 
np.vstack(p,2*p) -> 1 1 1
		    1 1 1
		    2 2 2 
		    2 2 2 
np.hstack(p,2*p) -> 1 1 1 2 2 2 
		    1 1 1 2 2 2

array_name.T -> transpose of the array
array1.dot(array2) -> dot product of the two arrays

Some of the functions: max(), min(), avg(), sum(), mean(), std() - standard deviation, argmax(), argmin()

r1 = ([1,2,3,4],[5,6,7,8],[9,10,11,12])
r2 = r[:2,:2] -> ([1,2],[5,6])
r2[:] = 0  -> r2 = ([0,0],[0,0])    r1 = ([0,0,3,4],[0,0,7,8],[9,10,11,12]) 
So, use copy() method to avoid this

p = np.random.randint(0,10,(4,3)) -> 4x3 matrix with random numbers from 0 to 9
		    